var searchIndex = JSON.parse('{\
"ledge_engine":{"doc":"Aboutledge_engine is a Rust graphics backend abstraction…","i":[[0,"graphics","ledge_engine","The `graphics` module handles all drawing operations for…",null,null],[3,"Vertex","ledge_engine::graphics","",null,null],[12,"a_pos","","",0,null],[12,"a_uv","","",0,null],[12,"a_vert_color","","",0,null],[3,"InstanceData","","",null,null],[3,"DrawInfo","","",null,null],[12,"texture_rect","","",1,null],[12,"color","","",1,null],[12,"transform","","",1,null],[3,"Rect","","",null,null],[12,"x","","",2,null],[12,"y","","",2,null],[12,"w","","",2,null],[12,"h","","",2,null],[3,"DescriptorBuilder","","",null,null],[3,"PipelineData","","",null,null],[4,"BlendMode","","",null,null],[13,"Add","","",3,null],[13,"Subtract","","",3,null],[13,"Alpha","","",3,null],[13,"Invert","","",3,null],[4,"Transform","","",null,null],[13,"Components","","",4,null],[12,"pos","ledge_engine::graphics::Transform","",5,null],[12,"rotation","","",5,null],[12,"scale","","",5,null],[12,"offset","","",5,null],[13,"Matrix","ledge_engine::graphics","",4,null],[0,"context","","The main Vulkan interface, holds backend components and…",null,null],[3,"GraphicsContext","ledge_engine::graphics::context","This is the context from which the graphics components…",null,null],[12,"queue","","",6,null],[12,"surface","","",6,null],[12,"device","","",6,null],[12,"swapchain","","",6,null],[12,"sampler","","",6,null],[12,"framebuffers","","",6,null],[12,"render_pass","","",6,null],[12,"dynamic_state","","",6,null],[12,"image_num","","",6,null],[12,"acquire_future","","",6,null],[12,"recreate_swapchain","","",6,null],[12,"previous_frame_end","","",6,null],[12,"command_buffer","","",6,null],[12,"pipe_data","","",6,null],[5,"window_size_dependent_setup","","",null,[[["arc",3],["dynamicstate",3],["renderpassabstract",8]],[["vec",3],["arc",3]]]],[5,"convert_to_screen_space","","",null,[[]]],[11,"new","","",6,[[["conf",3]]]],[11,"create_command_buffer","","Due to the nature of the command buffer and the safety…",6,[[]]],[11,"begin_frame","","Handles setup of a new frame, called when the graphics…",6,[[]]],[11,"draw","","Interacts with the given shader handle (which by default…",6,[[["descriptorset",8],["arc",3],["bufferaccess",8],["arc",3],["arc",3],["shaderhandle",8]]]],[11,"present","","This function submits the command buffer to the queue and…",6,[[]]],[0,"shader","ledge_engine::graphics","The shader module defines types, traits, and structs to…",null,null],[3,"Shader","ledge_engine::graphics::shader","",null,null],[12,"entry_point","","",7,null],[12,"specialization_constants","","",7,null],[3,"ShaderProgram","","",null,null],[3,"PipelineObjectSet","","",null,null],[3,"PipelineObject","","",null,null],[12,"pipeline","","",8,null],[4,"VertexOrder","","",null,null],[13,"LineList","","",9,null],[13,"LineStrip","","",9,null],[13,"PointList","","",9,null],[13,"TriangleFan","","",9,null],[13,"TriangleList","","",9,null],[13,"TriangleStrip","","",9,null],[8,"ShaderHandle","","",null,null],[10,"draw","","",10,[[["descriptorset",8],["arc",3],["bufferaccess",8],["arc",3],["graphicscontext",3]],[["result",4],["graphicserror",4]]]],[10,"set_blend_mode","","",10,[[["blendmode",4]],[["result",4],["graphicserror",4]]]],[10,"blend_mode","","",10,[[],["blendmode",4]]],[11,"new","","",7,[[]]],[11,"new","","",11,[[["blendmode",4],["arc",3],["pipelineobject",3]]]],[11,"new","","",12,[[]]],[11,"insert","","",12,[[["blendmode",4],["arc",3],["pipelineobject",3]]]],[11,"get","","",12,[[["blendmode",4]],[["option",4],["arc",3]]]],[11,"mode","","",12,[[["blendmode",4]],[["arc",3],["graphicserror",4],["result",4]]]],[11,"new","","",8,[[["graphicscontext",3],["shader",3],["shader",3],["blendmode",4],["vertexorder",4]]]],[0,"image","ledge_engine::graphics","TODO: A module dedicated to images, used for textures and…",null,null],[3,"Image","ledge_engine::graphics::image","",null,null],[12,"texture","","",13,null],[11,"new","","",13,[[["sampler",3],["texture",3],["arc",3]]]],[11,"empty","","",13,[[]]],[0,"camera","ledge_engine::graphics","The camera module holds the different camera options and…",null,null],[3,"PerspectiveCamera","ledge_engine::graphics::camera","A model of an ideal pinhole camera that follows…",null,null],[11,"new","","",14,[[]]],[11,"model_array","","",14,[[]]],[11,"view_array","","",14,[[]]],[11,"proj_array","","",14,[[]]],[11,"mv_array","","",14,[[]]],[11,"mvp_array","","",14,[[]]],[11,"rotate_x","","",14,[[["deg",3]]]],[11,"rotate_y","","",14,[[["deg",3]]]],[11,"rotate_z","","",14,[[["deg",3]]]],[11,"translate_x","","",14,[[]]],[11,"translate_y","","",14,[[]]],[11,"translate_z","","",14,[[]]],[11,"zoom","","",14,[[]]],[0,"buffer","ledge_engine::graphics","TODO: Partially implemented wrapper for Vulkano buffers.",null,null],[3,"BufferAttribute","ledge_engine::graphics::buffer","",null,null],[12,"inner","","",15,null],[11,"from_data","","",15,[[["arc",3],["device",3]]]],[0,"material","ledge_engine::graphics","TODO: Material is a module that will hold information…",null,null],[3,"ShaderMaterial","ledge_engine::graphics::material","",null,null],[0,"error","ledge_engine::graphics","Holds all graphics error enums.",null,null],[4,"GraphicsError","ledge_engine::graphics::error","",null,null],[13,"PipelineError","","",16,null],[13,"DrawError","","",16,null],[8,"Drawable","ledge_engine::graphics","",null,null],[10,"draw","","",17,[[["graphicscontext",3]]]],[11,"as_mat4","","",4,[[],["matrix4",3]]],[11,"new","","",1,[[]]],[11,"with_rect","","",1,[[["rect",3]]]],[11,"with_transform","","",1,[[["transform",4]]]],[11,"with_color","","",1,[[]]],[11,"into_instance_data","","",1,[[],["instancedata",3]]],[11,"translate","","",1,[[]]],[11,"rotate","","",1,[[]]],[11,"rotate_value","","",1,[[]]],[11,"nonuniform_scale","","",1,[[]]],[11,"scale","","",1,[[]]],[11,"as_vec","","",2,[[]]],[11,"new","","",18,[[["arc",3]]]],[11,"add","","",18,[[],["descriptorbuilder",3]]],[0,"conf","ledge_engine","Graphics and other configuration options.",null,null],[3,"WindowMode","ledge_engine::conf","",null,null],[3,"WindowSetup","","",null,null],[3,"Conf","","",null,null],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"new","","",21,[[]]],[11,"default","","",21,[[]]],[0,"asset","ledge_engine","TODO: This module will one day be the interface to the…",null,null],[0,"handle","ledge_engine::asset","",null,null],[3,"Handle","ledge_engine::asset::handle","",null,null],[12,"id","","",22,null],[12,"marker","","",22,null],[4,"HandleId","","",null,null],[13,"Id","","",23,null],[11,"random","","",23,[[]]],[11,"default","","",23,[[]]],[11,"new","","",23,[[]]],[0,"storage","ledge_engine::asset","",null,null],[3,"AssetStorage","ledge_engine::asset::storage","",null,null],[11,"new","","",24,[[]]],[11,"insert","","",24,[[],["handle",3]]],[11,"get","","",24,[[["handle",3]],["option",4]]],[0,"types","ledge_engine::asset","",null,null],[3,"Texture","ledge_engine::asset::types","",null,null],[12,"vulkano_texture","","",25,null],[12,"dimensions","","",25,null],[11,"new","","",25,[[["arc",3],["immutableimage",3]]]],[11,"from_file_vulkano","","",25,[[["graphicscontext",3]]]],[11,"as_raw_vk_texture","","",25,[[],["arc",3]]],[8,"Asset","ledge_engine::asset","",null,null],[11,"from","ledge_engine::graphics","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"ref_from_ptr","","",0,[[],["option",4]]],[11,"is_size_suitable","","",0,[[]]],[11,"indiv_size","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"ref_from_ptr","","",26,[[],["option",4]]],[11,"is_size_suitable","","",26,[[]]],[11,"indiv_size","","",26,[[]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"ref_from_ptr","","",1,[[],["option",4]]],[11,"is_size_suitable","","",1,[[]]],[11,"indiv_size","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"ref_from_ptr","","",2,[[],["option",4]]],[11,"is_size_suitable","","",2,[[]]],[11,"indiv_size","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"ref_from_ptr","","",18,[[],["option",4]]],[11,"is_size_suitable","","",18,[[]]],[11,"indiv_size","","",18,[[]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"ref_from_ptr","","",27,[[],["option",4]]],[11,"is_size_suitable","","",27,[[]]],[11,"indiv_size","","",27,[[]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"ref_from_ptr","","",3,[[],["option",4]]],[11,"is_size_suitable","","",3,[[]]],[11,"indiv_size","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"ref_from_ptr","","",4,[[],["option",4]]],[11,"is_size_suitable","","",4,[[]]],[11,"indiv_size","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","ledge_engine::graphics::context","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"ref_from_ptr","","",6,[[],["option",4]]],[11,"is_size_suitable","","",6,[[]]],[11,"indiv_size","","",6,[[]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","ledge_engine::graphics::shader","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"ref_from_ptr","","",7,[[],["option",4]]],[11,"is_size_suitable","","",7,[[]]],[11,"indiv_size","","",7,[[]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"ref_from_ptr","","",11,[[],["option",4]]],[11,"is_size_suitable","","",11,[[]]],[11,"indiv_size","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"ref_from_ptr","","",12,[[],["option",4]]],[11,"is_size_suitable","","",12,[[]]],[11,"indiv_size","","",12,[[]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"ref_from_ptr","","",8,[[],["option",4]]],[11,"is_size_suitable","","",8,[[]]],[11,"indiv_size","","",8,[[]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"ref_from_ptr","","",9,[[],["option",4]]],[11,"is_size_suitable","","",9,[[]]],[11,"indiv_size","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","ledge_engine::graphics::image","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"ref_from_ptr","","",13,[[],["option",4]]],[11,"is_size_suitable","","",13,[[]]],[11,"indiv_size","","",13,[[]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","ledge_engine::graphics::camera","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"ref_from_ptr","","",14,[[],["option",4]]],[11,"is_size_suitable","","",14,[[]]],[11,"indiv_size","","",14,[[]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","ledge_engine::graphics::buffer","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"ref_from_ptr","","",15,[[],["option",4]]],[11,"is_size_suitable","","",15,[[]]],[11,"indiv_size","","",15,[[]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","ledge_engine::graphics::material","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"ref_from_ptr","","",28,[[],["option",4]]],[11,"is_size_suitable","","",28,[[]]],[11,"indiv_size","","",28,[[]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","ledge_engine::graphics::error","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"ref_from_ptr","","",16,[[],["option",4]]],[11,"is_size_suitable","","",16,[[]]],[11,"indiv_size","","",16,[[]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","ledge_engine::conf","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"ref_from_ptr","","",19,[[],["option",4]]],[11,"is_size_suitable","","",19,[[]]],[11,"indiv_size","","",19,[[]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"ref_from_ptr","","",20,[[],["option",4]]],[11,"is_size_suitable","","",20,[[]]],[11,"indiv_size","","",20,[[]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"ref_from_ptr","","",21,[[],["option",4]]],[11,"is_size_suitable","","",21,[[]]],[11,"indiv_size","","",21,[[]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","ledge_engine::asset::handle","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"ref_from_ptr","","",22,[[],["option",4]]],[11,"is_size_suitable","","",22,[[]]],[11,"indiv_size","","",22,[[]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"ref_from_ptr","","",23,[[],["option",4]]],[11,"is_size_suitable","","",23,[[]]],[11,"indiv_size","","",23,[[]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","ledge_engine::asset::storage","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"ref_from_ptr","","",24,[[],["option",4]]],[11,"is_size_suitable","","",24,[[]]],[11,"indiv_size","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","ledge_engine::asset::types","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"ref_from_ptr","","",25,[[],["option",4]]],[11,"is_size_suitable","","",25,[[]]],[11,"indiv_size","","",25,[[]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"draw","ledge_engine::graphics::shader","",11,[[["descriptorset",8],["arc",3],["bufferaccess",8],["arc",3],["graphicscontext",3]],[["result",4],["graphicserror",4]]]],[11,"set_blend_mode","","",11,[[["blendmode",4]],[["result",4],["graphicserror",4]]]],[11,"blend_mode","","",11,[[],["blendmode",4]]],[11,"from","ledge_engine::asset::handle","",22,[[["handleid",4]]]],[11,"from","","",23,[[["handle",3]]]],[11,"clone","ledge_engine::graphics::image","",13,[[],["image",3]]],[11,"clone","ledge_engine::graphics","",3,[[],["blendmode",4]]],[11,"clone","","",0,[[],["vertex",3]]],[11,"clone","","",26,[[],["instancedata",3]]],[11,"clone","","",4,[[],["transform",4]]],[11,"clone","","",1,[[],["drawinfo",3]]],[11,"clone","","",2,[[],["rect",3]]],[11,"clone","ledge_engine::asset::handle","",22,[[],["handle",3]]],[11,"clone","","",23,[[],["handleid",4]]],[11,"clone","ledge_engine::asset::types","",25,[[],["texture",3]]],[11,"default","ledge_engine::graphics::image","",13,[[],["image",3]]],[11,"default","ledge_engine::graphics::camera","",14,[[]]],[11,"default","ledge_engine::graphics","",0,[[],["vertex",3]]],[11,"default","","",26,[[],["instancedata",3]]],[11,"default","","",4,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[],["rect",3]]],[11,"default","ledge_engine::asset::handle","",22,[[]]],[11,"default","ledge_engine::asset::types","",25,[[],["texture",3]]],[11,"eq","ledge_engine::graphics","",3,[[["blendmode",4]]]],[11,"eq","","",0,[[["vertex",3]]]],[11,"ne","","",0,[[["vertex",3]]]],[11,"eq","","",26,[[["instancedata",3]]]],[11,"ne","","",26,[[["instancedata",3]]]],[11,"eq","","",4,[[["transform",4]]]],[11,"ne","","",4,[[["transform",4]]]],[11,"eq","","",1,[[["drawinfo",3]]]],[11,"ne","","",1,[[["drawinfo",3]]]],[11,"eq","","",2,[[["rect",3]]]],[11,"ne","","",2,[[["rect",3]]]],[11,"eq","ledge_engine::asset::handle","",22,[[["handle",3]]]],[11,"ne","","",22,[[["handle",3]]]],[11,"eq","","",23,[[["handleid",4]]]],[11,"ne","","",23,[[["handleid",4]]]],[11,"eq","ledge_engine::asset::types","",25,[[["texture",3]]]],[11,"ne","","",25,[[["texture",3]]]],[11,"partial_cmp","ledge_engine::asset::handle","",22,[[["handle",3]],[["ordering",4],["option",4]]]],[11,"lt","","",22,[[["handle",3]]]],[11,"le","","",22,[[["handle",3]]]],[11,"gt","","",22,[[["handle",3]]]],[11,"ge","","",22,[[["handle",3]]]],[11,"partial_cmp","","",23,[[["handleid",4]],[["ordering",4],["option",4]]]],[11,"lt","","",23,[[["handleid",4]]]],[11,"le","","",23,[[["handleid",4]]]],[11,"gt","","",23,[[["handleid",4]]]],[11,"ge","","",23,[[["handleid",4]]]],[11,"fmt","ledge_engine::graphics::error","",16,[[["formatter",3]],["result",6]]],[11,"fmt","ledge_engine::graphics","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","ledge_engine::asset::handle","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","ledge_engine::asset::types","",25,[[["formatter",3]],["result",6]]],[11,"hash","ledge_engine::graphics","",3,[[]]],[11,"hash","ledge_engine::asset::handle","",22,[[]]],[11,"hash","","",23,[[]]]],"p":[[3,"Vertex"],[3,"DrawInfo"],[3,"Rect"],[4,"BlendMode"],[4,"Transform"],[13,"Components"],[3,"GraphicsContext"],[3,"Shader"],[3,"PipelineObject"],[4,"VertexOrder"],[8,"ShaderHandle"],[3,"ShaderProgram"],[3,"PipelineObjectSet"],[3,"Image"],[3,"PerspectiveCamera"],[3,"BufferAttribute"],[4,"GraphicsError"],[8,"Drawable"],[3,"DescriptorBuilder"],[3,"WindowMode"],[3,"WindowSetup"],[3,"Conf"],[3,"Handle"],[4,"HandleId"],[3,"AssetStorage"],[3,"Texture"],[3,"InstanceData"],[3,"PipelineData"],[3,"ShaderMaterial"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);